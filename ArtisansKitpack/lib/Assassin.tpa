COPY ~%MOD_FOLDER%/Thief/Assassin/2da~ ~override~
COPY ~%MOD_FOLDER%/Thief/Assassin/bams~ ~override~
COPY ~%MOD_FOLDER%/Thief/Assassin/spells~ ~override~

// ICONS

DEFINE_ACTION_FUNCTION cd_new_portrait_icon
  INT_VAR string = 0
  STR_VAR bam_file = "****"
  RET     icon
  BEGIN

  COPY_EXISTING ~statdesc.2da~ ~override~
    COUNT_2DA_ROWS 3 count
    READ_2DA_ENTRY (count - 1) 0 3 icon
    SET icon += 1

  APPEND ~statdesc.2da~ ~%icon% %string% %bam_file%~ UNLESS ~%bam_file%~

END

LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Backstab: Paralysis~) STR_VAR bam_file = c0asic01 RET c0asic01 = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Backstab: Hamstring~) STR_VAR bam_file = c0asic02 RET c0asic02 = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Backstab: Bleeding~) STR_VAR bam_file = c0asic03 RET c0asic03 = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Backstab: Cutthroat~) STR_VAR bam_file = c0asic04 RET c0asic04 = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Backstab: Lethal~) STR_VAR bam_file = c0asic05 RET c0asic05 = icon END

  COPY_EXISTING ~alignmnt.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 1 cols 0
		SET_2DA_ENTRY (%patch_row%) 2 cols 1
		SET_2DA_ENTRY (%patch_row%) 3 cols 1
		SET_2DA_ENTRY (%patch_row%) 4 cols 0
		SET_2DA_ENTRY (%patch_row%) 5 cols 1
		SET_2DA_ENTRY (%patch_row%) 6 cols 1
		SET_2DA_ENTRY (%patch_row%) 7 cols 0
		SET_2DA_ENTRY (%patch_row%) 8 cols 1
		SET_2DA_ENTRY (%patch_row%) 9 cols 1
	  END
	END

  COPY_EXISTING ~abclasrq.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 4 cols 15
	  END
	END

  COPY_EXISTING ~abclsmod.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 6 cols %-2%
	  END
	END

  COPY_EXISTING ~luabbr.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 1 cols ~c0as~
	  END
	END
	
COPY_EXISTING ~LUTH0.2da~ ~override/LUC0AS.2DA~
LPF patch_remove_hla STR_VAR remove_ability = ~GA_SPCL910~ END
LPF patch_remove_hla STR_VAR remove_ability = ~GA_SPCL911~ END
LPF patch_remove_hla STR_VAR remove_ability = ~GA_SPCL912~ END
LPF patch_add_hla STR_VAR ability = ~GA_C0ASHLA1~ num_allowed = 16 END	
LPF patch_add_hla STR_VAR ability = ~AP_C0ASHLA2~ num_allowed = 1 prerequisite = ~GA_C0ASHLA1~ END	
LPF patch_add_hla STR_VAR ability = ~GA_C0ASHLA3~ num_allowed = 1 prerequisite = ~AP_C0ASHLA2~ END	

COPY_EXISTING ~clasiskl.2da~ ~override~
SET_2DA_ENTRY 6 36 1 ~10~
SET_2DA_ENTRY 7 36 1 ~10~
	
COPY_EXISTING ~thiefscl.2da~ ~override~
SET_2DA_ENTRY 9 36 1 ~0~
	
  COPY_EXISTING ~thiefskl.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 2 cols 10
	  END
	END
	
LAF ~GET_KIT_STRREF~ STR_VAR kit_name = ~ASSASIN~ RET kit_strref END
STRING_SET_EVALUATE kit_strref ~ASSASSIN: The Way of the Assassin is a feared profession, and rightfully so. A master of the art of killing, the assassin is noteworthy for being able to slay a living man with a single calculated blow or from the slightest cut with a poisoned blade. No man alive is capable of killing a target in as many ways as an assassin, and once an assassin has marked a chosen target, their fate is often sealed. While the act of assassination demands swiftness and guile, an assassin's most important skill is patience; the patience to analyze their target, observing for weaknesses, and finding the most effective way to ensure the kill and fade away unseen.

Those who choose to walk the path of assassination do so for a variety of reasons. Many are opportunists, selling their services for personal gain. Some are vigilantes, hoping to make the world a better (or at least more peaceful) place by exterminating 'undesirables'. Yet others do so simply for the thrill of the kill. It is said that no two assassins are alike in either motive or technique.

Because of the unsavory nature of their profession as well as their preferred mode of operation, assassins are dreaded and reviled by decent folk. Assassins do not seek fame and recognition, as such things are detrimental to their cause and thus they rarely take positions of leadership or band in groups at all. The best assassins are all but unknown.

Advantages:
– Begins with a x3 Backstab multiplier. The assassin's Backstab multiplier caps at x7 at 17th level.
– Gains a +10% bonus to Hide in Shadows and Move Silently at 1st level and an extra +5% for every level thereafter.
– Gains a +1 bonus to Saving Throws vs. Death at 1st level and every 10 levels thereafter.
– May use the Analyze ability at will.

ANALYZE: With this ability, the user carefully observes the target and identifies their strengths and weaknesses, revealing their Hit Die, THAC0, Saving Throws, Magic Resistance, Damage Resistance and vulnerability to Poison and Backstabs. This ability may be used an unlimited number of times.

– May use the Poison Weapon ability once per day starting at level 1 and gaining one extra use every six levels thereafter.

POISON WEAPON: The assassin is capable of coating <PRO_HISHER> weapon for the next eight hours with a slow-acting but extremely potent poison. This poison deals damage and reduces the target's Constitution immediately and every following round for at least four rounds. After four rounds have passed, the target must make a Saving Throw vs. Death or remain poisoned for another four rounds. Therefore, the poison has the potential to last indefinitely as long as the target does not make a successful Saving Throw. The target may not die of Constitution loss caused by the poison.
  1st level: Target suffers two poison damage and loses one point of Constitution. No save modifier.
  6th level: Target suffers four poison damage and loses one point of Constitution. Save modifier of -1.
  11th level: Target suffers six poison damage and loses two points of Constitution. Save modifier of -2.
  16th level: Target suffers eight poison damage and loses two points of Constitution. Save modifier of -3.
  21st level: Target suffers ten poison damage and loses three points of Constitution. Save modifier of -4.

– Gains the Preparation and Enhanced Backstab passive effects.

PREPARATION: For every round that the assassin remains Invisible, <PRO_HESHE> gains a +1 bonus to Hit and Damage up to a cap of +2 at 1st level. This bonus increases by at +1 at 5th level and every 5 levels thereafter. Additionally, if the assassin remains Invisible for a full ten rounds, <PRO_HISHER> next attack becomes an automatic Critical Hit. Upon exiting stealth, all stacked bonuses are depleted immediately.

ENHANCED BACKSTAB: The assassin is a master of sneak attacks, capable of backstabbing from any direction while stealthed, while crippling <PRO_HISHER> victim with <PRO_HISHER> backstabs, inflicting one of the following effects. Save modifiers decrease by one for every six levels gained thereafter.
  Paralysis: Target must save vs. death at +2 or become Paralyzed for 2 rounds.
  Hamstring: Target must save vs. death or have their Movement Rate and Dexterity halved for 8 rounds.
  Bleeding: Target must save vs. death at +2 or suffer 1d4+1 piercing damage every round for 2 rounds + 1 round/6 levels.
  Cutthroat: Target must save vs. death or be Silenced for 20 rounds.
  Lethality (Level 17+): Target must save vs. death at +4 or be slain instantly. If target is immune to death effects, deal 20% maximum Hit Points in damage instead.

– From 5th level onwards, gains the Hidden Blade passive effect.

HIDDEN BLADE: When the assassin kills <PRO_HISHER> target, <PRO_HESHE> briefly turns Invisible and moves at double <PRO_HISHER> Movement Rate for one round. This may not occur more than once every five rounds, reduced by one round for every 5 levels gained thereafter (no cooldown at 30th level)

– From 10th level onwards, gains the Cloak of Shadows passive effect.

CLOAK OF SHADOWS: The assassin's mastery of stealth renders <PRO_HIMHER> completely undetectable and untargetable by all means, whether magical or mundane, while hiding or Invisible. Even creatures that normally see through invisibility cannot perceive the assassin.

Disadvantages:
– -2 penalty to Charisma.
– -2 penalty to starting Reputation.
– May not Set Traps.
– May only be of any non-good alignment.
– May only distribute 10 skill points per level among thieving skills.~

// change backstab

ACTION_FOR_EACH file IN backstab crippstr sneakatt BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ THEN BEGIN

    COPY_EXISTING ~%file%.2da~ ~override~
      COUNT_2DA_COLS col_num
      COUNT_2DA_ROWS (col_num - 1) row_num
      READ_2DA_ENTRY 0 (col_num - 2) (col_num - 1) level    // read last enry of top line as level
      READ_2DA_ENTRY 0 0 (col_num - 1) val                  // weidu seems to freak out with a top line w/ one less entry
      SET_2DA_ENTRY  0 0 (col_num - 1) ~CD_DELETE_ME %val%~ // temp
      FOR (index = level ; index < 50 ; ++index) BEGIN
        SET new = index + 1
        FOR (index2 = 1 ; index2 < row_num ; ++index2) BEGIN // extend all other rows with previous column's value
          READ_2DA_ENTRY index2 (col_num - 1) (col_num) val
          SET_2DA_ENTRY  index2 (col_num - 1) (col_num) ~%val% %val%~
        END
        SET_2DA_ENTRY 0 (col_num - 1) (col_num) ~%index% %new%~ // extend level row
        SET col_num += 1
      END
      REPLACE_TEXTUALLY ~CD_DELETE_ME~ ~~
      PRETTY_PRINT_2DA
      BUT_ONLY

  END

END

COPY_EXISTING ~backstab.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 1 cols 2
		SET_2DA_ENTRY (%patch_row%) 2 cols 3
		SET_2DA_ENTRY (%patch_row%) 3 cols 3
		SET_2DA_ENTRY (%patch_row%) 4 cols 3
		SET_2DA_ENTRY (%patch_row%) 5 cols 3
		SET_2DA_ENTRY (%patch_row%) 6 cols 4
		SET_2DA_ENTRY (%patch_row%) 7 cols 4
		SET_2DA_ENTRY (%patch_row%) 8 cols 4
		SET_2DA_ENTRY (%patch_row%) 9 cols 4
		SET_2DA_ENTRY (%patch_row%) 10 cols 5
		SET_2DA_ENTRY (%patch_row%) 11 cols 5
		SET_2DA_ENTRY (%patch_row%) 12 cols 5
		SET_2DA_ENTRY (%patch_row%) 13 cols 5
		SET_2DA_ENTRY (%patch_row%) 14 cols 6
		SET_2DA_ENTRY (%patch_row%) 15 cols 6
		SET_2DA_ENTRY (%patch_row%) 16 cols 6
		SET_2DA_ENTRY (%patch_row%) 17 cols 6
		SET_2DA_ENTRY (%patch_row%) 18 cols 7
		SET_2DA_ENTRY (%patch_row%) 19 cols 7
		SET_2DA_ENTRY (%patch_row%) 20 cols 7
		SET_2DA_ENTRY (%patch_row%) 21 cols 7
		SET_2DA_ENTRY (%patch_row%) 22 cols 7
		SET_2DA_ENTRY (%patch_row%) 23 cols 7
		SET_2DA_ENTRY (%patch_row%) 24 cols 7
		SET_2DA_ENTRY (%patch_row%) 25 cols 7
		SET_2DA_ENTRY (%patch_row%) 26 cols 7
		SET_2DA_ENTRY (%patch_row%) 27 cols 7
		SET_2DA_ENTRY (%patch_row%) 28 cols 7
		SET_2DA_ENTRY (%patch_row%) 29 cols 7
		SET_2DA_ENTRY (%patch_row%) 30 cols 7
		SET_2DA_ENTRY (%patch_row%) 31 cols 7
		SET_2DA_ENTRY (%patch_row%) 32 cols 7
		SET_2DA_ENTRY (%patch_row%) 33 cols 7
		SET_2DA_ENTRY (%patch_row%) 34 cols 7
		SET_2DA_ENTRY (%patch_row%) 35 cols 7
		SET_2DA_ENTRY (%patch_row%) 36 cols 7
		SET_2DA_ENTRY (%patch_row%) 37 cols 7
		SET_2DA_ENTRY (%patch_row%) 38 cols 7
		SET_2DA_ENTRY (%patch_row%) 39 cols 7
		SET_2DA_ENTRY (%patch_row%) 40 cols 7
		SET_2DA_ENTRY (%patch_row%) 41 cols 7
		SET_2DA_ENTRY (%patch_row%) 42 cols 7
		SET_2DA_ENTRY (%patch_row%) 43 cols 7
		SET_2DA_ENTRY (%patch_row%) 44 cols 7
		SET_2DA_ENTRY (%patch_row%) 45 cols 7
		SET_2DA_ENTRY (%patch_row%) 46 cols 7
		SET_2DA_ENTRY (%patch_row%) 47 cols 7
		SET_2DA_ENTRY (%patch_row%) 48 cols 7
		SET_2DA_ENTRY (%patch_row%) 49 cols 7
		SET_2DA_ENTRY (%patch_row%) 50 cols 7
		SET_2DA_ENTRY (%patch_row%) 51 cols 7
	  END
	END

COPY_EXISTING ~crippstr.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 1 cols 0
		SET_2DA_ENTRY (%patch_row%) 2 cols 1
		SET_2DA_ENTRY (%patch_row%) 3 cols 1
		SET_2DA_ENTRY (%patch_row%) 4 cols 2
		SET_2DA_ENTRY (%patch_row%) 5 cols 2
		SET_2DA_ENTRY (%patch_row%) 6 cols 3
		SET_2DA_ENTRY (%patch_row%) 7 cols 3
		SET_2DA_ENTRY (%patch_row%) 8 cols 4
		SET_2DA_ENTRY (%patch_row%) 9 cols 4
		SET_2DA_ENTRY (%patch_row%) 10 cols 5
		SET_2DA_ENTRY (%patch_row%) 11 cols 5
		SET_2DA_ENTRY (%patch_row%) 12 cols 6
		SET_2DA_ENTRY (%patch_row%) 13 cols 6
		SET_2DA_ENTRY (%patch_row%) 14 cols 7
		SET_2DA_ENTRY (%patch_row%) 15 cols 7
		SET_2DA_ENTRY (%patch_row%) 16 cols 8
		SET_2DA_ENTRY (%patch_row%) 17 cols 8
		SET_2DA_ENTRY (%patch_row%) 18 cols 9
		SET_2DA_ENTRY (%patch_row%) 19 cols 9
		SET_2DA_ENTRY (%patch_row%) 20 cols 10
		SET_2DA_ENTRY (%patch_row%) 21 cols 10
		SET_2DA_ENTRY (%patch_row%) 22 cols 11
		SET_2DA_ENTRY (%patch_row%) 23 cols 11
		SET_2DA_ENTRY (%patch_row%) 24 cols 12
		SET_2DA_ENTRY (%patch_row%) 25 cols 12
		SET_2DA_ENTRY (%patch_row%) 26 cols 13
		SET_2DA_ENTRY (%patch_row%) 27 cols 13
		SET_2DA_ENTRY (%patch_row%) 28 cols 14
		SET_2DA_ENTRY (%patch_row%) 29 cols 14
		SET_2DA_ENTRY (%patch_row%) 30 cols 15
		SET_2DA_ENTRY (%patch_row%) 31 cols 15
		SET_2DA_ENTRY (%patch_row%) 32 cols 16
		SET_2DA_ENTRY (%patch_row%) 33 cols 16
		SET_2DA_ENTRY (%patch_row%) 34 cols 17
		SET_2DA_ENTRY (%patch_row%) 35 cols 17
		SET_2DA_ENTRY (%patch_row%) 36 cols 18
		SET_2DA_ENTRY (%patch_row%) 37 cols 18
		SET_2DA_ENTRY (%patch_row%) 38 cols 19
		SET_2DA_ENTRY (%patch_row%) 39 cols 19
		SET_2DA_ENTRY (%patch_row%) 40 cols 20
		SET_2DA_ENTRY (%patch_row%) 41 cols 20
		SET_2DA_ENTRY (%patch_row%) 42 cols 21
		SET_2DA_ENTRY (%patch_row%) 43 cols 21
		SET_2DA_ENTRY (%patch_row%) 44 cols 22
		SET_2DA_ENTRY (%patch_row%) 45 cols 22
		SET_2DA_ENTRY (%patch_row%) 46 cols 23
		SET_2DA_ENTRY (%patch_row%) 47 cols 23
		SET_2DA_ENTRY (%patch_row%) 48 cols 24
		SET_2DA_ENTRY (%patch_row%) 49 cols 24
		SET_2DA_ENTRY (%patch_row%) 50 cols 25
		SET_2DA_ENTRY (%patch_row%) 51 cols 25
	  END
	END
	
COPY_EXISTING ~crippstr.2da~ ~override~
	COUNT_2DA_COLS cols // amount of columns
	READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
	FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~ // read column value
	  PATCH_IF ~%text%~ STRING_EQUAL_CASE ~ASSASIN~ BEGIN
	    SET patch_row = %row%
		SET_2DA_ENTRY (%patch_row%) 1 cols 1
		SET_2DA_ENTRY (%patch_row%) 2 cols 2
		SET_2DA_ENTRY (%patch_row%) 3 cols 2
		SET_2DA_ENTRY (%patch_row%) 4 cols 3
		SET_2DA_ENTRY (%patch_row%) 5 cols 3
		SET_2DA_ENTRY (%patch_row%) 6 cols 4
		SET_2DA_ENTRY (%patch_row%) 7 cols 4
		SET_2DA_ENTRY (%patch_row%) 8 cols 5
		SET_2DA_ENTRY (%patch_row%) 9 cols 5
		SET_2DA_ENTRY (%patch_row%) 10 cols 6
		SET_2DA_ENTRY (%patch_row%) 11 cols 6
		SET_2DA_ENTRY (%patch_row%) 12 cols 7
		SET_2DA_ENTRY (%patch_row%) 13 cols 7
		SET_2DA_ENTRY (%patch_row%) 14 cols 8
		SET_2DA_ENTRY (%patch_row%) 15 cols 8
		SET_2DA_ENTRY (%patch_row%) 16 cols 9
		SET_2DA_ENTRY (%patch_row%) 17 cols 9
		SET_2DA_ENTRY (%patch_row%) 18 cols 10
		SET_2DA_ENTRY (%patch_row%) 19 cols 10
		SET_2DA_ENTRY (%patch_row%) 20 cols 11
		SET_2DA_ENTRY (%patch_row%) 21 cols 11
		SET_2DA_ENTRY (%patch_row%) 22 cols 12
		SET_2DA_ENTRY (%patch_row%) 23 cols 12
		SET_2DA_ENTRY (%patch_row%) 24 cols 13
		SET_2DA_ENTRY (%patch_row%) 25 cols 13
		SET_2DA_ENTRY (%patch_row%) 26 cols 14
		SET_2DA_ENTRY (%patch_row%) 27 cols 14
		SET_2DA_ENTRY (%patch_row%) 28 cols 15
		SET_2DA_ENTRY (%patch_row%) 29 cols 15
		SET_2DA_ENTRY (%patch_row%) 30 cols 16
		SET_2DA_ENTRY (%patch_row%) 31 cols 16
		SET_2DA_ENTRY (%patch_row%) 32 cols 17
		SET_2DA_ENTRY (%patch_row%) 33 cols 17
		SET_2DA_ENTRY (%patch_row%) 34 cols 18
		SET_2DA_ENTRY (%patch_row%) 35 cols 18
		SET_2DA_ENTRY (%patch_row%) 36 cols 19
		SET_2DA_ENTRY (%patch_row%) 37 cols 19
		SET_2DA_ENTRY (%patch_row%) 38 cols 20
		SET_2DA_ENTRY (%patch_row%) 39 cols 20
		SET_2DA_ENTRY (%patch_row%) 40 cols 21
		SET_2DA_ENTRY (%patch_row%) 41 cols 21
		SET_2DA_ENTRY (%patch_row%) 42 cols 22
		SET_2DA_ENTRY (%patch_row%) 43 cols 22
		SET_2DA_ENTRY (%patch_row%) 44 cols 23
		SET_2DA_ENTRY (%patch_row%) 45 cols 23
		SET_2DA_ENTRY (%patch_row%) 46 cols 24
		SET_2DA_ENTRY (%patch_row%) 47 cols 24
		SET_2DA_ENTRY (%patch_row%) 48 cols 25
		SET_2DA_ENTRY (%patch_row%) 49 cols 25
		SET_2DA_ENTRY (%patch_row%) 50 cols 26
		SET_2DA_ENTRY (%patch_row%) 51 cols 26
	  END
	END
	
ACTION_IF FILE_EXISTS_IN_GAME ~clabth02.2da~ THEN BEGIN
COPY ~%MOD_FOLDER%/Thief/Assassin/2da/clabth02.2da~ ~override~
END

ACTION_IF FILE_EXISTS_IN_GAME ~baldur.bcs~ THEN BEGIN
EXTEND_TOP ~baldur.bcs~ ~%MOD_FOLDER%/Thief/Assassin/scripts/reputation.baf~
END

ACTION_IF FILE_EXISTS_IN_GAME ~bdbaldur.bcs~ THEN BEGIN
EXTEND_TOP ~bdbaldur.bcs~ ~%MOD_FOLDER%/Thief/Assassin/scripts/reputation.baf~
END

ACTION_IF FILE_EXISTS_IN_GAME ~baldur25.bcs~ THEN BEGIN
EXTEND_TOP ~baldur25.bcs~ ~%MOD_FOLDER%/Thief/Assassin/scripts/reputation.baf~
END

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0ashla1.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Vulnerable~ /* Vulnerable */)
  END
SAY NAME1 ~Expose Weakness~ /* Expose Weakness */
SAY NAME2 ~Expose Weakness~ /* Expose Weakness */
SAY UNIDENTIFIED_DESC ~Expose Weakness
To an assassin, no enemy is without a weak point. Using this ability, the assassin may mark a target as vulnerable, reducing their Armor Class by 10 points and setting their physical resistance (if any) to zero for three rounds. Additionally, if the target is immune to backstabs, they lose their immunity permanently. This ability can be taken multiple times, but an assassin can only mark a single target at any given time.~ /* Expose Weakness
To an assassin, no enemy is without a weak point. Using this ability, the assassin may mark a target as vulnerable, reducing their Armor Class by 10 points and setting their physical resistance (if any) to zero for three rounds. Additionally, if the target is immune to backstabs, they lose their immunity permanently. This ability can be taken multiple times, but an assassin can only mark a single target at any given time. */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0ashla2.spl~ ~override~
SAY NAME1 ~Assassin's Blade~ /* Assassin's Blade */
SAY NAME2 ~Assassin's Blade~ /* Assassin's Blade */
SAY UNIDENTIFIED_DESC ~Assassin's Blade
A master assassin's blade must be honed to the sharpest edge. This innate ability permanently increases the assassin's critical hit chance with melee weapons by 10% and <PRO_HISHER> backstab modifier by 1.

Requires: Expose Weakness~ /* Assassin's Blade
A master assassin's blade must be honed to the sharpest edge. This innate ability permanently increases the assassin's critical hit chance with melee weapons by 10% and <PRO_HISHER> backstab modifier by 1.

Requires: Expose Weakness */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0ashla3.spl~ ~override~
SAY NAME1 ~Death Attack~ /* Death Attack */
SAY NAME2 ~Death Attack~ /* Death Attack */
SAY UNIDENTIFIED_DESC ~Death Attack
A high-level assassin's intimate knowledge of vital spots on opponents allows <PRO_HIMHER> to, once per day, strike a lethal blow against a target. With this ability, the assassin's next attack within five rounds becomes a guaranteed critical hit and kills the target instantly on a failed save vs. death at -4.

Requires: Assassin's Blade~ /* Death Attack
A high-level assassin's intimate knowledge of vital spots on opponents allows <PRO_HIMHER> to, once per day, strike a lethal blow against a target. With this ability, the assassin's next attack within five rounds becomes a guaranteed critical hit and kills the target instantly on a failed save vs. death at -4.

Requires: Assassin's Blade */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin1.spl~ ~override~
SAY NAME1 ~Enhanced Backstab~ /* Enhanced Backstab */
SAY NAME2 ~Enhanced Backstab~ /* Enhanced Backstab */
SAY UNIDENTIFIED_DESC ~Enhanced Backstab
The assassin is capable of crippling <PRO_HISHER> victim with <PRO_HISHER> backstabs, inflicting one of the following effects. Save modifiers decrease by one for every six levels of the assassin.

Paralysis: Target must save vs. death at +2 or become paralyzed for 2 rounds.
Hamstring: Target must save vs. death or have their movement rate and Dexterity halved for 8 rounds.
Bleeding: Target must save vs. death at +2 or suffer 1d4+1 piercing damage every round for 2 rounds + 1 round/6 levels.
Cutthroat: Target must save vs. death or be silenced for 20 rounds.
Lethality (Level 17+): Target must save vs. death at +4 or be slain instantly. If target is immune to death effects, deal 20% maximum hit points in damage instead.~ /* Enhanced Backstab
The assassin is capable of crippling <PRO_HISHER> victim with <PRO_HISHER> backstabs, inflicting one of the following effects. Save modifiers decrease by one for every six levels of the assassin.

Paralysis: Target must save vs. death at +2 or become paralyzed for 2 rounds.
Hamstring: Target must save vs. death or have their movement rate and Dexterity halved for 8 rounds.
Bleeding: Target must save vs. death at +2 or suffer 1d4+1 piercing damage every round for 2 rounds + 1 round/6 levels.
Cutthroat: Target must save vs. death or be silenced for 20 rounds.
Lethality (Level 17+): Target must save vs. death at +4 or be slain instantly. */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0as#01.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Analysis: Critical Bonus~)
  END

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0as#i4.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Gained Passive Ability: Hidden Blade~)
  END

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0as#i5.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Gained Passive Ability: Cloak of Shadows~)
  END

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0as#p01.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Poison~ /* Poison */)
  END
COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0as#p1.spl~ ~override~
SAY NAME1 ~Poison Weapon~ /* Poison Weapon */
SAY NAME2 ~Poison Weapon~ /* Poison Weapon */
SAY UNIDENTIFIED_DESC ~Poison Weapon
This ability's user is capable of coating <PRO_HISHER> weapon for the next eight hours with a slow-acting but extremely potent poison. This poison deals damage every round and reduces the target's Constitution by one point every round for at least five rounds. After five rounds have passed, the target must make a Saving Throw vs. Death or become poisoned for another five rounds. Therefore, the poison has the potential to last indefinitely as long as the target does not make a successful Saving Throw. The target may not die of Constitution loss caused by the poison.
1st level: Target suffers two poison damage and loses one point of Constitution every round. No save modifier.
6th level: Target suffers four poison damage and loses one point of Constitution every round. Save modifier of -1.
11th level: Target suffers six poison damage and loses two points of Constitution every round. Save modifier of -2.
16th level: Target suffers eight poison damage and loses two points of Constitution every round. Save modifier of -3.
21st level: Target suffers ten poison damage and loses three points of Constitution every round. Save modifier of -4.~ /* Poison Weapon
The assassin is capable of coating <PRO_HISHER> weapon for the next eight hours with a slow-acting but extremely potent poison. This poison deals damage every round and reduces the target's Constitution by one point every round for at least five rounds. After five rounds have passed, the target must make a Saving Throw vs. Death or become poisoned for another five rounds. Therefore, the poison has the potential to last indefinitely as long as the target does not make a successful Saving Throw. The target may not die of Constitution loss caused by the poison.
1st level: Target suffers two poison damage and loses one point of Constitution every round. No save modifier.
6th level: Target suffers four poison damage and loses one point of Constitution every round. Save modifier of -1.
11th level: Target suffers six poison damage and loses two points of Constitution every round. Save modifier of -2.
16th level: Target suffers eight poison damage and loses two points of Constitution every round. Save modifier of -3.
21st level: Target suffers ten poison damage and loses three points of Constitution every round. Save modifier of -4. */
COPY_EXISTING ~c0as#p01.spl~ ~override/spcl423.spl~

ACTION_IF FILE_EXISTS_IN_GAME ~C0TR#30A.spl~ THEN BEGIN
COPY_EXISTING ~C0TR#30A.SPL~ OVERRIDE
LPF ALTER_SPELL_HEADER STR_VAR icon = C0ASIN8B END
LPF ALTER_EFFECT INT_VAR match_opcode = 171 STR_VAR resource = c0as#p1 END
SAY NAME1 ~Mimic: Poison Weapon~
END

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin2.spl~ ~override~
    LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 142
        parameter2 = c0asic01
      END
SAY NAME1 ~Backstab: Paralysis~ /* Backstab: Paralysis */
SAY NAME2 ~Backstab: Paralysis~ /* Backstab: Paralysis */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin3.spl~ ~override~
    LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 142
        parameter2 = c0asic02
      END
SAY NAME1 ~Backstab: Hamstring~ /* Backstab: Hamstring */
SAY NAME2 ~Backstab: Hamstring~ /* Backstab: Hamstring */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin4.spl~ ~override~
    LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 142
        parameter2 = c0asic03
      END
SAY NAME1 ~Backstab: Bleeding~ /* Backstab: Bleeding */
SAY NAME2 ~Backstab: Bleeding~ /* Backstab: Bleeding */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin5.spl~ ~override~
    LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 142
        parameter2 = c0asic04
      END
SAY NAME1 ~Backstab: Cutthroat~ /* Backstab: Cutthroat */
SAY NAME2 ~Backstab: Cutthroat~ /* Backstab: Cutthroat */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asin6.spl~ ~override~
    LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 142
        parameter2 = c0asic05
      END
SAY NAME1 ~Backstab: Lethality~ /* Backstab: Lethality */
SAY NAME2 ~Backstab: Lethality~ /* Backstab: Lethality */

COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0assp2.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Hamstrung~ /* Hamstrung */)
  END
COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0assp3.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Bleeding~ /* Bleeding */)
  END
COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0assp4.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Silenced~ /* Silenced */)
  END
  
COPY ~%MOD_FOLDER%/Thief/Assassin/spells/c0asinv2.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
	  parameter1 = RESOLVE_STR_REF (~Hidden Blade Ready~ /* Hidden Blade Ready */)
  END
