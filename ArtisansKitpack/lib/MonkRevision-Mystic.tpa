COPY ~%MOD_FOLDER%/MonkRevision/MysticFists/2DA~ ~OVERRIDE~
COPY ~%MOD_FOLDER%/MonkRevision/MysticFists/BAM~ ~OVERRIDE~
COPY ~%MOD_FOLDER%/MonkRevision/MysticFists/EFF~ ~OVERRIDE~
COPY ~%MOD_FOLDER%/MonkRevision/MysticFists/FISTS~ ~OVERRIDE~
COPY ~%MOD_FOLDER%/MonkRevision/MysticFists/SPELLS~ ~OVERRIDE~

APPEND item_use.2da ~C0MFIST1 * -1 4 -1
C0MFIST2 * -1 4 -1
C0MFIST3 * -1 4 -1
C0MFIST4 * -1 4 -1
C0MFIST5 * -1 4 -1
C0MFIST6 * -1 4 -1
C0MFIST7 * -1 4 -1
C0MFIST8 * -1 4 -1
C0MFIST9 * -1 4 -1
C0MFISTA * -1 4 -1
C0MFISTB * -1 4 -1
C0MFISTC * -1 4 -1
C0MFISTD * -1 4 -1~

COPY_EXISTING ~C0MN#AN1.EFF~ ~OVERRIDE/C0MN#AN3.EFF~
WRITE_SHORT 0x1c IDS_OF_SYMBOL (~ANIMATE~ ~MONK_FEMALE_HALFORC~)
WRITE_BYTE 0x90 1
WRITE_ASCII 0x94 ~C0MN#AN3~
COPY_EXISTING ~C0MN#AN1.EFF~ ~OVERRIDE/C0MN#AN4.EFF~
WRITE_SHORT 0x1c IDS_OF_SYMBOL (~ANIMATE~ ~MONK_MALE_HALFORC~)
WRITE_BYTE 0x90 1
WRITE_ASCII 0x94 ~C0MN#AN4~

COPY_EXISTING ~C0MN#FI.CRE~ OVERRIDE
WRITE_ASCII 0x2cc ~C0MN#FI~ #8  // dialogue
WRITE_ASCII 0x248 ~C0MN#FI~ #8  // override
WRITE_ASCII 0x280 ~C0MN#FI~ #32 // death variable

COPY_EXISTING ~C0MFIST1.ITM~ OVERRIDE
SAY NAME2 ~Fist~
SAY UNIDENTIFIED_DESC ~These fists deal 1d4 crushing damage.~

COPY_EXISTING ~C0MFIST2.ITM~ OVERRIDE
SAY NAME2 ~Fist +1~
SAY UNIDENTIFIED_DESC ~These fists deal 1d4+1 crushing damage and strike as a +1 weapon.~

COPY_EXISTING ~C0MFIST3.ITM~ OVERRIDE
SAY NAME2 ~Fist +1~
SAY UNIDENTIFIED_DESC ~These fists deal 1d6+1 crushing damage and strike as a +1 weapon.~

COPY_EXISTING ~C0MFIST4.ITM~ OVERRIDE
SAY NAME2 ~Fist +1~
SAY UNIDENTIFIED_DESC ~These fists deal 1d6+1 crushing damage and strike as a +1 silver weapon.~

COPY_EXISTING ~C0MFIST5.ITM~ OVERRIDE
SAY NAME2 ~Fist +2~
SAY UNIDENTIFIED_DESC ~These fists deal 1d6+2 crushing damage and strike as a +2 silver weapon.~

COPY_EXISTING ~C0MFIST6.ITM~ OVERRIDE
SAY NAME2 ~Fist +2~
SAY UNIDENTIFIED_DESC ~These fists deal 1d8+2 crushing damage and strike as a +2 silver weapon.~

COPY_EXISTING ~C0MFIST7.ITM~ OVERRIDE
SAY NAME2 ~Fist +3~
SAY UNIDENTIFIED_DESC ~These fists deal 1d8+3 crushing damage and strike as a +3 silver weapon.~

COPY_EXISTING ~C0MFIST8.ITM~ OVERRIDE
SAY NAME2 ~Fist +3~
SAY UNIDENTIFIED_DESC ~These fists deal 1d10+3 crushing damage and strike as a +3 silver weapon.~

COPY_EXISTING ~C0MFIST9.ITM~ OVERRIDE
SAY NAME2 ~Fist +4~
SAY UNIDENTIFIED_DESC ~These fists deal 1d10+4 crushing damage and strike as a +4 silver weapon.~

COPY_EXISTING ~C0MFISTA.ITM~ OVERRIDE
SAY NAME2 ~Fist +4~
SAY UNIDENTIFIED_DESC ~These fists deal 1d12+4 crushing damage and strike as a +4 silver weapon.~

COPY_EXISTING ~C0MFISTB.ITM~ OVERRIDE
SAY NAME2 ~Fist +4~
SAY UNIDENTIFIED_DESC ~These fists deal 1d12+4 crushing damage and strike as a +4 silver weapon.~

COPY_EXISTING ~C0MFISTC.ITM~ OVERRIDE
SAY NAME2 ~Fist +5~
SAY UNIDENTIFIED_DESC ~These fists deal 1d12+5 crushing damage and strike as a +5 silver weapon.~

COPY_EXISTING ~C0MFISTD.ITM~ OVERRIDE
SAY NAME2 ~Fist +5~
SAY UNIDENTIFIED_DESC ~These fists deal 2d8+5 crushing damage and strike as a +5 silver weapon.~

COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F2.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 4 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST2 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F3.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 5 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST3 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F4.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 7 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST4 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F5.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 8 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST5 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F6.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 9 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST6 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F7.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 12 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST7 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F8.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 13 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST8 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#F9.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 16 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFIST9 END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#FA.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 17 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFISTA END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#FB.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 18 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFISTB END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#FC.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 20 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFISTC END
COPY_EXISTING ~C0MN#F1.SPL~ ~OVERRIDE/C0MN#FD.SPL~
LPF ALTER_SPELL_HEADER INT_VAR min_level = 21 END
LPF ALTER_EFFECT INT_VAR match_opcode = 143 STR_VAR resource = C0MFISTD END

INCLUDE ~%MOD_FOLDER%/lib/replace_multiline.tpa~
INCLUDE ~%MOD_FOLDER%/lib/EnlightenedFist.tpa~
INCLUDE ~%MOD_FOLDER%/lib/SacredFist.tpa~

COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // avoid crashing on empty items
    READ_BYTE    0x21 monk //reads the byte containing the fighter usability flag
    PATCH_IF ((monk BAND 0b00100000) = 0b00100000) BEGIN // if it is usable by fighters
      READ_SHORT    0x1C type //reads the byte containing item type
      PATCH_IF (type = 12) BEGIN // if it is a shield
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 319
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
		END
      END
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // avoid crashing on empty items
    READ_BYTE    0x18 flags //reads the byte containing the fighter usability flag
	READ_SHORT    0x1C type //reads the byte containing item type
    PATCH_IF ((flags BAND 0b00000010) = 0b00000010) AND NOT (type = 26) BEGIN
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 319
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_ENLIGHTENED_FIST~)
				parameter2 = 9
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 319
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
		END
      END
    END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // avoid crashing on empty items
    READ_BYTE    0x1F fighter //reads the byte containing the fighter usability flag
    PATCH_IF ((fighter BAND 0b00001000) = 0b00000000) BEGIN // if it is usable by fighters
	READ_BYTE    0x18 flags //reads the byte containing the fighter usability flag
    PATCH_IF ((flags BAND 0b00000010) = 0b00000010) BEGIN // if it is usable by fighters
      READ_BYTE    0x21 monk //reads the byte containing monks usability flag
      READ_SHORT    0x1C type //reads the byte containing item type
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI1
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI2
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI3
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_SACRED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI4
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_ENLIGHTENED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI1
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_ENLIGHTENED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI2
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_ENLIGHTENED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI3
		END
		LPF ADD_ITEM_EQEFFECT
			INT_VAR
				opcode = 177
				target = 1
				timing = 2
				parameter1 = IDS_OF_SYMBOL (~KIT~ ~C0_ENLIGHTENED_FIST~)
				parameter2 = 9
				insert_point = (0 - 1)
			STR_VAR
				resource = C0MQANI4
		END
      END
    END
  END
BUT_ONLY_IF_IT_CHANGES

COMPILE EVALUATE_BUFFER ~%MOD_FOLDER%/MonkRevision/MysticFists/script/c0mn#fi.baf~

COPY_EXISTING ~C0MN#041.EFF~ ~OVERRIDE/C0MN#049.EFF~
WRITE_BYTE 0x54 8
WRITE_BYTE 0x58 0
WRITE_ASCII 0x94 ~C0MN#049~
COPY_EXISTING ~C0MN#043.EFF~ ~OVERRIDE/C0MN#040.EFF~
WRITE_BYTE 0x54 8
WRITE_BYTE 0x58 0
WRITE_ASCII 0x94 ~C0MN#040~
COPY_EXISTING ~C0MN#045.EFF~ ~OVERRIDE/C0MN#04_.EFF~
WRITE_BYTE 0x54 8
WRITE_BYTE 0x58 0
WRITE_ASCII 0x94 ~C0MN#04_~
COPY_EXISTING ~C0MN#047.EFF~ ~OVERRIDE/C0MN#04!.EFF~
WRITE_BYTE 0x54 8
WRITE_BYTE 0x58 0
WRITE_ASCII 0x94 ~C0MN#04!~